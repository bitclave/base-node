import org.apache.maven.shared.model.fileset.FileSet
import org.web3j.mavenplugin.JavaClassGeneratorMojo

buildscript {
    ext {
        kotlinVersion = '1.3.21'
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url 'https://dl.bintray.com/ethereum/maven/' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath("org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2")
        classpath("org.web3j:web3j-maven-plugin:0.3.0")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply from: "$rootDir/ktlint.gradle"

group = 'com.bitclave.node'
version = '0.0.1'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

configurations {
    jar.archiveName = 'base-node.jar'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    afterEvaluate {
        //noinspection GroovyAssignabilityCheck
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['com/bitclave/node/services/errors/**', '**/generated/**'])
        })
    }
}

coveralls {
    sourceDirs += ['src/main/kotlin']
}

compileKotlin.dependsOn ktlint

task compileSolidity(type: JavaExec) {
    def solidityGenerator = new JavaClassGeneratorMojo()
    def fields = solidityGenerator.class.declaredFields
    def path = new FileSet()
    def pathMain = projectDir.toString().replaceAll("\\\\", "/") + "/src/main"

    fields.each { it.setAccessible(true) }

    path.setDirectory(pathMain + "/resources/")
    solidityGenerator.packageName = "com.bitclave.node.solidity.generated"
    solidityGenerator.sourceDestination = pathMain + "/java/"
    solidityGenerator.soliditySourceFiles = path
    solidityGenerator.nativeJavaType = true

    solidityGenerator.execute()
}

repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/ethereum/maven/' }
    maven { url 'https://plugins.gradle.org/m2/' }
}

dependencies {
    compile 'org.web3j:core:3.3.1'

    compile 'org.flywaydb:flyway-core'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-configuration-processor'

    compile 'io.github.microutils:kotlin-logging:1.6.24'
    compile 'com.internetitem:logback-elasticsearch-appender:1.6'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"

    compile 'io.springfox:springfox-swagger2:2.8.0'
    compile 'io.springfox:springfox-swagger-ui:2.8.0'

    compile 'com.google.code.gson:gson:2.8.5'

    compile 'org.bouncycastle:bcprov-jdk15on:1.59'

    compile 'org.bitcoinj:bitcoinj-core:0.14.5'

//    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'org.apache.tomcat', module: 'tomcat-jdbc'
    }

    compile('com.zaxxer:HikariCP:2.5.1') {
        exclude group: 'org.hibernate', module: 'hibernate-core'
    }

    compile 'org.postgresql:postgresql:42.2.5'

    compile 'javax.xml.bind:jaxb-api:2.3.0'

    compile('org.hibernate:hibernate-hikaricp:5.2.11.Final') {
        exclude group: 'com.zaxxer', module: 'HikariCP'
        exclude group: 'org.hibernate', module: 'hibernate-core'
    }

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'com.h2database:h2'
}

compileJava.dependsOn(processResources)
